---
swagger: '2.0'
info:
  title: GitHub data source
  version: '1.0'
  description: GitHub data source V2
paths:    # swagger forces me to add at least one path
  /noop:
    get:
      description: no-op
      responses:
        200:
          description: ok
definitions:
  DataSource:
    type: object
    properties:
      Slug:
        type: string
        example: github
      Name:
        type: string
        example: GitHub
      Categories:
        type: array
        items:
          type: string
          example: repository, issue, pull_request
  MetaData:
    type: object
    properties:
      BackendName:
        type: string
        example: insights-datasource-github
      BackendVersion:
        type: string
        example: v0.1.0
      Project:
        type: string
        example: Hyperledger Sawtooth
      Tags:
        type: array
        items:
          type: string
          example: my-tag
  Identity:
    type: object
    properties:
      Id:
        type: string
        example: 1234567890abcdef
        description: PK - up to 50 chars
      Name:
        type: string
        example: Lukasz Gryglicki
      Username:
        type: string
        example: lgryglicki
      Email:
        type: string
        example: xyz@abc.com
      DataSourceId:
        type: string
        example: github
        description: data source type slug (FK)
      AvatarURL:
        type: string
        example: https://avatars.githubusercontent.com/u/13455738?v=4
  Label:
    type: object
    properties:
      Id:
        type: string
        example: 1234567890abcdef
        description: PK - up to 50 chars
      LabelId:
        type: string
        example: 1234567890abcdef
        description: GitHub internal issue ID
      Name:
        type: string
        example: /lgtm
  Reaction:
    type: object
    properties:
      Type:
        type: string
        example: ok
        description: literal reaction type
      Emoji:
        type: string
        example: ðŸ˜ƒ
        description: UNICODE emoji data
      Author:
        type: object
        $ref: "#/definitions/Identity"
      ObjectID:
        type: string
        example: 1234567890abcdef
        description: reference to parent object (can be Issue.Id or IssueActivity.Key)
  IssueActivity:
    type: object
    properties:
      Id:
        type: string
        example: 1234567890abcdef
        description: PK - up to 50 chars
      IssueKey:
        type: string
        example: 1234567890abcdef
        description: FK - up to 50 chars, points to Issue.Id
      IssueId:
        type: string
        example: 1234567890abcdef
        description: points to Issue.IssueId 
      CreatedAt:
        type: string
        format: date-time
        example: '2019-09-02 03:00:33.000000'
      ActivityType:
        type: string
        example: github_issue_created, github_issue_closed, github_issue_assignee_added, github_issue_comment_added, github_issue_reaction, github_issue_comment_reaction, 
        description: FIXME allows reconstructing relations
      Body:
        type: string
        description: issue/comment body
        example: My comment body
        x-nullable: true
      URL:
        type: string
        description: issue/comment URL
        x-nullable: true
      Key:
        type: string
        description: activity unique key, this is GitHub comment ID if activity is a comment or Issue.Number when activity is an issue
        example: "150"
        x-nullable: true
      IdentityAssociaction:
        type: string
      Identity:
        type: object
        description: activity creator (ProjectDataSourceIdentity)
        $ref: "#/definitions/Identity"
      Reaction:
        type: object
        x-nullable: true
        $ref: "#/definitions/Reaction"
  Issue:
    type: object
    properties:
      Id:
        type: string
        example: 1234567890abcdef
        description: PK - up to 50 chars
      IssueId:
        type: string
        example: 1234567890abcdef
        description: GitHub internal issue ID
      IssueNumber:
        type: integer
        example: 123
        description: GitHub internal issue number
      CreatedAt:
        type: string
        format: date-time
      UpdatedAt:
        type: string
        format: date-time
        example: '2019-09-02 03:00:33.000000'
      ClosedAt:
        type: string
        format: date-time
        x-nullable: true
      IsClosed:
        type: boolean
        example: false
      IsPullRequest:
        type: boolean
        example: false
      Title:
        type: string
        example: My issue title
      DataSourceId:
        type: string
        example: github
        description: data source type slug (FK)
      Activities:
        type: array
        items:
          $ref: "#/definitions/IssueActivity"
      Labels:
        type: array
        items:
          $ref: "#/definitions/Label"
  CodeChangeRequestActivity:
    type: object
    properties:
      Id:
        type: string
        example: 1234567890abcdef
        description: PK - up to 50 chars
      CodeChangeRequestKey:
        type: string
        example: 1234567890abcdef
        description: FK - up to 50 chars, points to CodeChangeRequest.Id
      CodeChangeRequestId:
        type: string
        example: 1234567890abcdef
        description: points to CodeChangeRequest.CodeChangeRequestId 
      CreatedAt:
        type: string
        format: date-time
        example: '2019-09-02 03:00:33.000000'
      ActivityType:
        type: string
        example: >
          github_pull_request_created, github_pull_request_closed, github_pull_request_merged,
          github_pull_request_assignee_added, github_pull_request_requested_reviewer_added,
          github_pull_request_comment_added, github_pull_request_comment_reaction, github_pull_request_review_added
        description: FIXME allows reconstructing relations
      Body:
        type: string
        description: PR/comment/review body
        example: My comment body
        x-nullable: true
      URL:
        type: string
        description: PR/comment/review URL
        x-nullable: true
      Key:
        type: string
        description: activity unique key, this is GitHub comment ID if activity is a comment or CodeChangeRequest.Number when activity is a PR
        example: "150"
        x-nullable: true
      CommitSHA:
        type: string
        x-nullable: true
        example: 2b20505d9d60202c6779342033d344dba0685d1b
        description: if activity type is a review, then we have a commit SHA
      State:
        type: string
        x-nullable: true
        example: APPROVED, COMMENTED, CHANGES_REQUESTED
        description: only present if activity type is a review
      IsApproval:
        type: boolean
        x-nullable: true
        example: true, false, null
        description: only present if activity type is a review
      IdentityAssociaction:
        type: string
      Identity:
        type: object
        description: activity creator (ProjectDataSourceIdentity)
        $ref: "#/definitions/Identity"
      Reaction:
        type: object
        x-nullable: true
        $ref: "#/definitions/Reaction"
  CodeChangeRequestCommit:
    type: object
    properties:
      SHA:
        type: string
        example: 2b20505d9d60202c6779342033d344dba0685d1b
      Identity:
        type: object
        description: committer
        $ref: "#/definitions/Identity"
  CodeChangeRequest:
    type: object
    properties:
      Id:
        type: string
        example: 1234567890abcdef
        description: PK - up to 50 chars
      CodeChangeRequestId:
        type: string
        example: 1234567890abcdef
        description: GitHub internal PR ID
      CodeChangeRequestNumber:
        type: integer
        example: 123
        description: GitHub internal PR number (for issue that is a PR CodeChangeRequest.Number = Issue.Number withing the same repo)
      CreatedAt:
        type: string
        format: date-time
      UpdatedAt:
        type: string
        format: date-time
        example: '2019-09-02 03:00:33.000000'
      ClosedAt:
        type: string
        format: date-time
        x-nullable: true
      IsClosed:
        type: boolean
        example: false
      MergedAt:
        type: string
        format: date-time
        x-nullable: true
      IsMerged:
        type: boolean
        example: false
      State:
        type: string
        example: open, closed, merged
      Title:
        type: string
        example: My PR title
      DataSourceId:
        type: string
        example: github
        description: data source type slug (FK)
      Activities:
        type: array
        items:
          $ref: "#/definitions/CodeChangeRequestActivity"
      Labels:
        type: array
        items:
          $ref: "#/definitions/Label"
      Commits:
        type: array
        items:
          $ref: "#/definitions/CodeChangeRequestCommit"
  RepositoryStatus:
    type: object
    properties:
      URL:
        type: string
        example: https://github.com/cncf/devstats
      ID:
        type: integer
        example: 1011
        description: GitHub internal repository ID
      CalculatedAt:
        type: string
        format: date-time
      Forks:
        type: integer
        example: 10
      Subscribers:
        type: integer
        example: 120
      Stargazers:
        type: integer
        example: 95
  Event:
    type: object
    description: single event in Github can be any combination of repository stats, code change request and issue.
    properties:
      Issue:
        type: object
        x-nullable: true
        $ref: "#/definitions/Issue"
      CodeChangeRequest:
        type: object
        x-nullable: true
        $ref: "#/definitions/CodeChangeRequest"
      Repository:
        type: object
        x-nullable: true
        $ref: "#/definitions/RepositoryStatus"
  Data:
    type: object
    description: this is the final output of insights-datasource-github, data source will output packs up to some fixed size, like 500 events pack at once
    properties:
      DataSource:
        type: object
        $ref: "#/definitions/DataSource"
      MetaData:
        type: object
        $ref: "#/definitions/MetaData"
      Endpoint:
        type: object
        properties:
          Org:
            type: string
            description: GitHub org
            example: cncf
          Repo:
            type: string
            description: GitHub repo
            example: devstats
          URL:
            type: string
            description: GitHub path/url
            example: https://github.com/cncf/devstats
      Events:
        type: array
        items:
          $ref: "#/definitions/Event"
